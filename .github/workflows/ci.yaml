# name: CI Pipeline for MERN Stack with ArgoCD

# on:
#   push:
#     branches:
#       - main
#     paths-ignore:
#       - 'manifests/*'  # Ignore any changes to the manifests folder
#   pull_request:
#     branches:
#       - main
#     paths-ignore:
#       - 'manifests/*'  # Ignore any changes to the manifests folder

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
#       with:
#         repository: okeymcokoli/MERN-STACK-DEPLOYMENT  # Use your GitHub repo URL

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Cache Docker layers
#       uses: actions/cache@v2
#       with:
#         path: /tmp/.buildx-cache
#         key: ${{ runner.os }}-buildx-${{ github.sha }}
#         restore-keys: |
#           ${{ runner.os }}-buildx-

#     - name: Build frontend image
#       run: |
#         cd mern/frontend
#         docker build -t okeymcokoli/mern-frontend:v1 .
#       env:
#         DOCKER_BUILDKIT: 1  # Enable BuildKit for better caching

#     - name: Build backend image
#       run: |
#         cd mern/backend
#         docker build -t okeymcokoli/mern-backend:v1 .
#       env:
#         DOCKER_BUILDKIT: 1  # Enable BuildKit for better caching

#     - name: Log in to DockerHub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Push frontend image to DockerHub
#       run: |
#         docker push okeymcokoli/mern-frontend:v1

#     - name: Push backend image to DockerHub
#       run: |
#         docker push okeymcokoli/mern-backend:v1

#   update-manifests:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
#       with:
#         repository: okeymcokoli/MERN-STACK-DEPLOYMENT  # Use your GitHub repo URL

#     - name: Update Kubernetes manifests with new image tags
#       run: |
#         # Update the frontend and backend Docker image tags in the manifests
#         sed -i 's|okeymcokoli/mern-frontend:v1|okeymcokoli/mern-frontend:v1|g' manifests/frontend/deployment.yaml
#         sed -i 's|okeymcokoli/mern-backend:v1|okeymcokoli/mern-backend:v1|g' manifests/backend/deployment.yaml

#     - name: Commit and push updated manifests
#       run: |
#         git config --global user.name "GitHub Actions"
#         git config --global user.email "actions@github.com"
#         git add manifests/*
#         git commit -m "Update image tags for frontend, backend, and mongodb"
#         git push https://x-access-token:${{ secrets.TOKEN }}@github.com/okeymcokoli/MERN-STACK-DEPLOYMENT.git


name: CI Pipeline for MERN Stack with ArgoCD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'manifests/*'  # Ignore any changes to the manifests folder
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'manifests/*'  # Ignore any changes to the manifests folder

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: okeymcokoli/MERN-STACK-DEPLOYMENT  # Use your GitHub repo URL

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'  # specify the Node.js version for both frontend and backend

    # Install dependencies for Frontend (React)
    - name: Install frontend dependencies
      run: |
        cd mern/frontend
        npm install  # Install frontend dependencies

    # Static Code Analysis for Frontend (React)
    - name: Run ESLint for frontend
      run: |
        cd mern/frontend
        npm run lint  # assumes `npm run lint` is configured in package.json

    # Run Unit Tests for Frontend (React)
    - name: Run unit tests for frontend
      run: |
        cd mern/frontend
        npm run test -- --coverage  # assumes `npm run test` is configured to run tests

    # Install dependencies for Backend (Node.js)
    - name: Install backend dependencies
      run: |
        cd mern/backend
        npm install  # Install backend dependencies

    # Static Code Analysis for Backend (Node.js)
    - name: Run ESLint for backend
      run: |
        cd mern/backend
        npm run lint  # assumes `npm run lint` is configured in package.json

    # Run Unit Tests for Backend (Node.js)
    - name: Run unit tests for backend
      run: |
        cd mern/backend
        npm run test -- --coverage  # assumes `npm run test` is configured to run tests

    # Build Docker Images
    - name: Build frontend image
      run: |
        cd mern/frontend
        docker build -t okeymcokoli/mern-frontend:v1 .
      env:
        DOCKER_BUILDKIT: 1  # Enable BuildKit for better caching

    - name: Build backend image
      run: |
        cd mern/backend
        docker build -t okeymcokoli/mern-backend:v1 .
      env:
        DOCKER_BUILDKIT: 1  # Enable BuildKit for better caching

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push frontend image to DockerHub
      run: |
        docker push okeymcokoli/mern-frontend:v1

    - name: Push backend image to DockerHub
      run: |
        docker push okeymcokoli/mern-backend:v1

  update-manifests:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: okeymcokoli/MERN-STACK-DEPLOYMENT  # Use your GitHub repo URL

    - name: Update Kubernetes manifests with new image tags
      run: |
        # Update the frontend and backend Docker image tags in the manifests
        sed -i 's|okeymcokoli/mern-frontend:v1|okeymcokoli/mern-frontend:v1|g' manifests/frontend/deployment.yaml
        sed -i 's|okeymcokoli/mern-backend:v1|okeymcokoli/mern-backend:v1|g' manifests/backend/deployment.yaml

    - name: Commit and push updated manifests
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add manifests/*
        git commit -m "Update image tags for frontend, backend, and mongodb"
        git push https://x-access-token:${{ secrets.TOKEN }}@github.com/okeymcokoli/MERN-STACK-DEPLOYMENT.git
